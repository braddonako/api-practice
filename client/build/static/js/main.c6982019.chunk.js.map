{"version":3,"sources":["Components/Home/home.js","Components/Header_Footer/header.js","Components/Header_Footer/footer.js","hoc/layout.js","Components/utils/button.js","Components/utils/Form/formfield.js","Components/utils/Form/formActions.js","actions/user_actions.js","actions/types.js","Components/utils/misc.js","Components/Register_login/login.js","Components/Register_login/index.js","routes.js","reducers/index.js","reducers/user_reducer.js","index.js"],"names":["Home","Component","Header","className","id","Footer","Layout","this","props","children","MyButton","template","type","to","linkTo","addStyles","title","buttons","Formfield","formdata","change","formTemplate","element","config","value","onBlur","event","blur","onChange","errorMessage","validation","valid","validationMessage","showError","renderTemplate","update","formName","newFormdata","newElement","target","validData","error","email","test","message","required","trim","validate","touched","generateData","dataToSubmit","key","isFormValid","formIsValid","loginUser","payload","axios","post","then","response","data","Login","state","formError","formSuccess","name","placeholder","password","submitForm","preventDefault","console","log","dispatch","setState","updateForm","onSubmit","onClick","connect","withRouter","RegisterLogin","margin","Routes","path","exact","component","rootReducer","combineReducers","user","action","loginSuccess","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.c6982019.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                Home\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react'; // this is destructuring, now I dont have to do extends React.Component\n\n\n\nclass Header extends Component {\n\n    render(){\n        return (\n            <header>\n                <div className='container'>\n                    <div className='left'>\n                      <div id='logo'>JobTracker</div>\n                    </div>\n                    <div className='right'>\n                      <div className='top'>\n                           top\n                        </div>\n                     <div className='bottom'>\n                         Bottom\n                    </div>\n                </div>\n                </div>\n            </header>\n        );\n    }\n    \n\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer className='footerBgColor'>\n            <div className='container'>\n                <div className='logo'>\n                    Job Tracker 2020\n                </div>\n\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from '../Components/Header_Footer/header'\nimport Footer from '../Components/Header_Footer/footer'\n\nclass Layout extends Component {\n    render() {\n        return (\n            <div>\n            <Header/>\n            <div className='page_container'>\n                {this.props.children}\n            </div>\n            <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React from 'react';\nimport {Link } from 'react-router-dom';\n\nconst MyButton = (props) => {\n\n    const buttons = () => {\n        let template = '';\n\n        switch(props.type){\n            case \"default\":\n                template = <Link\n                    className=\"link_default\"\n                    to={props.linkTo}\n                    {...props.addStyles}\n                >\n                    {props.title}\n                </Link>\n            break;\n            default:\n                template= '';\n            }\n            \n        return template;\n    }\n\n    return (\n       \n        <div className='my_link'>\n            {buttons()}\n        </div>\n       \n    );\n};\n\nexport default MyButton;","import React from 'react';\n\nconst Formfield = ({formdata, change, id}) => {\n\n\n    // this is a function that will let the user know they MUST enter a username and password == it is required\n    const showError = () => {\n        let errorMessage = null;\n\n        if(formdata.validation && !formdata.valid){\n            errorMessage = (\n                <div className=\"error_label\">\n                    {formdata.validationMessage}\n                </div>\n            )\n        }\n\n        return errorMessage;\n    }\n   \n    const renderTemplate = () => {\n\n        let formTemplate = '';\n\n        switch(formdata.element){\n            case('input'):\n                formTemplate = (\n                    <div className='formBlock'>\n                        <input\n                            {...formdata.config}\n                            value={formdata.value}\n                            onBlur={(event)=> change({event, id, blur:true})} // blur checks if something has been entered or not\n                            onChange={(event)=> change({event,id})}\n                        />\n\n                        {showError()}\n                    </div>\n                )\n            break;\n            default:\n                formTemplate = '';\n        }\n\n        return formTemplate;\n\n    }\n   \n    return (\n        <div>\n            {renderTemplate()}\n        </div>\n    );\n};\n\nexport default Formfield;","export const validate = (element, formdata=[]) => {\n\n    let error = [true, ''];\n\n     if(element.validation.email){\n        const valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n        const message = `${!valid ? 'Must be a valid email':''}`;\n        error = !valid ? [valid, message] : error;\n    }\n\n    if(element.validation.required){\n        const valid = element.value.trim() !== '';\n        const message = `${!valid ? 'This field is required':''}`;\n        error = !valid ? [valid, message] : error;\n    }\n\n    return error;\n\n}\n\n\nexport const update = (element, formdata, formName) => {\n\n    const newFormdata = {\n        ...formdata\n    }\n\n    const newElement = {\n        ...newFormdata[element.id]\n    }\n\n    newElement.value = element.event.target.value;\n\n    if(element.blur){\n        let validData = validate(newElement, formdata)\n        newElement.valid = validData[0];\n        newElement.validationMessage = validData[1]\n\n    }\n\n    newElement.touched = element.blur;\n    newFormdata[element.id] = newElement;\n\n    return newFormdata;\n\n}\n\n\nexport const generateData = (formdata, formName) => {\n    let dataToSubmit = {};\n\n    for (let key in formdata){\n        dataToSubmit[key] = formdata[key].value;\n    }\n\n    return dataToSubmit;\n}\n\nexport const isFormValid = (formdata, formName) => {\n    let formIsValid = true;\n\n    for(let key in formdata){\n        formIsValid = formdata[key].valid && formIsValid\n    }\n    return formIsValid;\n}","import axios from 'axios';\nimport { LOGIN_USER } from './types'\n\nimport {USER_SERVER} from '../Components/utils/misc';\n\nexport function loginUser(dataToSubmit){\n\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\n    .then(response => response.data)\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n\n}","export const LOGIN_USER = 'login_user';","// Server ROUTES\nexport const USER_SERVER = '/api/users';\nexport const JOB_SERVER = '/api/jobs'","import React, { Component } from 'react';\nimport FormField from '../utils/Form/formfield';\nimport { update, generateData, isFormValid } from '../utils/Form/formActions';\nimport { withRouter } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/user_actions'\n\nclass Login extends Component {\n\n\n     state = {\n         formError: false,\n         formSuccess: '',\n         formdata: {\n             email: {\n                 element: 'input',\n                 value: '',\n                 config: {\n                     name: 'email_input',\n                     type: 'email',\n                     placeholder: 'Enter your email'\n                 },\n                 validation: {\n                     required: true,\n                     email: true\n                 },\n                 valid: false,\n                 touched: false,\n                 validationMessage: ''\n             },\n             password: {\n                 element: 'input',\n                 value: '',\n                 config: {\n                     name: 'password_input',\n                     type: 'password',\n                     placeholder: 'Enter your password'\n                 },\n                 validation: {\n                     required: true\n                 },\n                 valid: false,\n                 touched: false,\n                 validationMessage: ''\n             }\n         }\n     }\n\n    submitForm = (event) => {\n        event.preventDefault();\n        // going to turn the data to key value pairs == so we have just the name and value\n\n        let dataToSubmit = generateData(this.state.formdata, 'login')\n        let formIsValid = isFormValid(this.state.formdata, 'login');\n\n        console.log(dataToSubmit)\n\n        if(formIsValid){\n            this.props.dispatch(loginUser(dataToSubmit)); // dispatch comes from redux\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n\n        console.log(dataToSubmit)\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, 'login');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"signin_wrapper\">\n                <form onSubmit={(event)=> this.submitForm(event)}>\n                    <FormField\n                        id={'email'}\n                        formdata={this.state.formdata.email}\n                        change={(element)=> this.updateForm(element)}\n                    />\n                    <FormField\n                        id={'password'}\n                        formdata={this.state.formdata.password}\n                        change={(element)=> this.updateForm(element)}\n                    />\n\n                    { this.state.formError ? \n                    <div className='error_label'>\n                        Please check your data\n                    </div>\n                    :null\n                    } \n                    <button onClick={(event)=> this.submitForm(event)}>Login</button>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n\n\nexport default connect()(withRouter(Login));","import React from 'react';\nimport MyButton from '../utils/button';\nimport Login from './login'\n\nconst RegisterLogin = () => {\n    return (\n        <div className='page_wrapper'>\n            <div className='container'>\n                <h1 className='registerHeader'>Welcome</h1>\n                <div className='register_login_container'>\n                    \n                    <div className='left'>\n                        <h1>New users</h1>\n                        <p>Login here to track all of your jobs, add notes, and see what is and what isnt working during your job search!</p>\n                        <MyButton\n                            type='default'\n                            title='Create an account'\n                            linkTo='/register'\n                            addStyles={{\n                                margin: '10px 0 0 0'\n                            }}\n                        />\n                    </div>\n                    <div className='right'>\n                        <h1>Login</h1>\n                        <p>Please login if you already have an account</p>\n                        <Login/>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterLogin;","import React from 'react';\nimport {Switch, Route } from 'react-router-dom';\n\nimport Home from './Components/Home/home';\nimport Layout from './hoc/layout';\nimport RegisterLogin from './Components/Register_login';\n\n\nconst Routes = () => {\n  return(\n    <Layout>\n      <Switch>\n          <Route path=\"/register_login\" exact component={RegisterLogin}/>\n        <Route path=\"/\" exact component={Home}/>\n      </Switch>\n    </Layout>\n    \n  )\n}\n\nexport default Routes;","import {combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user\n})\n\nexport default rootReducer","import {\n    LOGIN_USER\n} from '../actions/types'\n\nexport default function(state={}, action){\n    switch(action.type){\n        case LOGIN_USER:\n            return {...state, loginSuccess: action.payload}\n        default: \n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Resources/CSS/styles.css';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport Routes from './routes'\n\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nimport Reducer from './reducers'\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(Reducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())}>\n      <BrowserRouter>\n          <Routes/>\n      </BrowserRouter>\n    </Provider>\n\n, document.getElementById('root'));\n"],"sourceRoot":""}